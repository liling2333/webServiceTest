package com.web.test;

import java.net.URL;  
import java.util.HashMap;  
import java.util.Map;  
  
import javax.xml.namespace.QName;  
  
import org.apache.cxf.endpoint.Endpoint;  
import org.apache.cxf.frontend.ClientProxy;  
import org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor;  
import org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor;
import org.apache.wss4j.dom.handler.WSHandlerConstants;

import com.client.Person;
import com.client.UserService;
import com.client.UserServiceImplService;
  
/** 
 * This class was generated by Apache CXF 2.4.0-SNAPSHOT Tue Oct 26 16:45:43 CST 
 * 2010 Generated source version: 2.4.0-SNAPSHOT 
 *  
 */  
  
public final class Client {  
  
    private static final QName SERVICE_NAME = new QName(  
    		"http://outputService.web.com/", "UserServiceImplService");
  
    private Client() {  
    }  
  
    public static void main(String args[]) throws Exception {  
        URL wsdlURL = new URL("http://localhost:8081/webServiceTest/webservice/getPersonById?wsdl");
  
        UserServiceImplService ss = new UserServiceImplService(wsdlURL, SERVICE_NAME);
		UserService port = ss.getUserServiceImplPort();
        org.apache.cxf.endpoint.Client client = ClientProxy.getClient(port);  
        Endpoint cxfEp = client.getEndpoint();  
  
        // Clint Out  
        Map<String, Object> outProp = new HashMap<String, Object>();  
        outProp.put(WSHandlerConstants.ACTION, WSHandlerConstants.TIMESTAMP  
                + " " + WSHandlerConstants.SIGNATURE + " "  
                + WSHandlerConstants.ENCRYPT);  
        outProp.put(WSHandlerConstants.USER, "clientprivatekey");  
        outProp.put(WSHandlerConstants.ENCRYPTION_USER, "serverpublickey");  
        outProp.put(WSHandlerConstants.PW_CALLBACK_CLASS,  
                UTPasswordClientCallBack.class.getName());  
        outProp.put(WSHandlerConstants.SIG_PROP_FILE,  
                "Client_Sign.properties");  
        outProp.put(WSHandlerConstants.ENC_PROP_FILE,  
                "Client_Encrypt.properties");  
        cxfEp.getOutInterceptors().add(new WSS4JOutInterceptor(outProp));  
  
        // Client In(Return)  
        Map<String, Object> inProp = new HashMap<String, Object>();  
        inProp.put(WSHandlerConstants.ACTION, WSHandlerConstants.TIMESTAMP  
                + " " + WSHandlerConstants.SIGNATURE + " "  
                + WSHandlerConstants.ENCRYPT);  
        inProp.put(WSHandlerConstants.PW_CALLBACK_CLASS,  
                UTPasswordClientCallBack.class.getName());  
        inProp.put(WSHandlerConstants.DEC_PROP_FILE,  
                "Client_Sign.properties");  
        inProp.put(WSHandlerConstants.SIG_PROP_FILE,  
                "Client_Encrypt.properties");  
        cxfEp.getInInterceptors().add(new WSS4JInInterceptor(inProp));  
  
        {  
            System.out.println("Invoking input...");  
            Person _input__return = port.getPersonById(1);  
            System.out.println("input.result=" + _input__return);  
        }  
  
        System.exit(0);  
    }  
  
}  
